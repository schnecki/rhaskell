% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Control.Monad.r
\name{Monad}
\alias{Monad}
\title{Monad class.}
\description{
Monad class.

Monad class.
}
\section{Super classes}{
\code{\link[rhaskell:Functor]{rhaskell::Functor}} -> \code{\link[rhaskell:Applicative]{rhaskell::Applicative}} -> \code{Monad}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Monad$new()}}
\item \href{#method-bind}{\code{Monad$bind()}}
\item \href{#method-clone}{\code{Monad$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rhaskell" data-topic="Functor" data-id="fmap">}\href{../../rhaskell/html/Functor.html#method-fmap}{\code{rhaskell::Functor$fmap()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rhaskell" data-topic="Applicative" data-id="apply">}\href{../../rhaskell/html/Applicative.html#method-apply}{\code{rhaskell::Applicative$apply()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rhaskell" data-topic="Applicative" data-id="pure">}\href{../../rhaskell/html/Applicative.html#method-pure}{\code{rhaskell::Applicative$pure()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Monad$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bind"></a>}}
\if{latex}{\out{\hypertarget{method-bind}{}}}
\subsection{Method \code{bind()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Monad$bind(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{function taking pure value and return monadic value

\code{bind :: m a (=self) -> (a -> m b) -> m b}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Monad$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
