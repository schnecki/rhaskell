% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Data.Either.r
\name{Either}
\alias{Either}
\title{Either monad implementation.}
\description{
Either monad implementation.

Either monad implementation.
}
\section{Super classes}{
\code{\link[rhaskell:Functor]{rhaskell::Functor}} -> \code{\link[rhaskell:Applicative]{rhaskell::Applicative}} -> \code{\link[rhaskell:Monad]{rhaskell::Monad}} -> \code{Either}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Either$new()}}
\item \href{#method-fmap}{\code{Either$fmap()}}
\item \href{#method-pure}{\code{Either$pure()}}
\item \href{#method-apply}{\code{Either$apply()}}
\item \href{#method-bind}{\code{Either$bind()}}
\item \href{#method-fromLeft}{\code{Either$fromLeft()}}
\item \href{#method-fromRight}{\code{Either$fromRight()}}
\item \href{#method-either}{\code{Either$either()}}
\item \href{#method-fromRightOrStop}{\code{Either$fromRightOrStop()}}
\item \href{#method-clone}{\code{Either$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="rhaskell" data-topic="Applicative" data-id="alt">}\href{../../rhaskell/html/Applicative.html#method-alt}{\code{rhaskell::Applicative$alt()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="rhaskell" data-topic="Applicative" data-id="empty">}\href{../../rhaskell/html/Applicative.html#method-empty}{\code{rhaskell::Applicative$empty()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$new(mValue = NULL, isRight = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{mValue}}{value.

Bind function}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fmap"></a>}}
\if{latex}{\out{\hypertarget{method-fmap}{}}}
\subsection{Method \code{fmap()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$fmap(fun)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-pure"></a>}}
\if{latex}{\out{\hypertarget{method-pure}{}}}
\subsection{Method \code{pure()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$pure(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-apply"></a>}}
\if{latex}{\out{\hypertarget{method-apply}{}}}
\subsection{Method \code{apply()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$apply(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bind"></a>}}
\if{latex}{\out{\hypertarget{method-bind}{}}}
\subsection{Method \code{bind()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$bind(fun)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fun}}{function to apply if it is a Right value

\code{bind :: (b -> c) -> Either a b (=self) -> Either a c}
Unwrap a Left value with default.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromLeft"></a>}}
\if{latex}{\out{\hypertarget{method-fromLeft}{}}}
\subsection{Method \code{fromLeft()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$fromLeft(def)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{def}}{default value

\code{fromLeft :: a -> Either a b (=self) -> a}
Unwrap a Right value with default.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromRight"></a>}}
\if{latex}{\out{\hypertarget{method-fromRight}{}}}
\subsection{Method \code{fromRight()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$fromRight(def)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{def}}{default value

\code{fromRight :: b -> Either a b (=self) -> b}
Unwrap an Either from Left or Right with corresponding specified functions.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-either"></a>}}
\if{latex}{\out{\hypertarget{method-either}{}}}
\subsection{Method \code{either()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$either(f, g)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{f}}{function to apply in case of \code{Left} value}

\item{\code{g}}{function to apply in case of \code{Right} value

\code{either :: (a -> c) -> (b -> c) -> Either a b (=self) -> c}
Unwrap Right value or call stop() on Left value.

\code{fromRightOrStop :: Either Character b (=self) -> b}
Check if a \code{Either} is of type \code{Right}.

\code{isRight :: Either a b (=self) -> Bool}
Check if a \code{Either} is of type \code{Left}.

\code{isLeft :: Either a b (=self) -> Bool}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromRightOrStop"></a>}}
\if{latex}{\out{\hypertarget{method-fromRightOrStop}{}}}
\subsection{Method \code{fromRightOrStop()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$fromRightOrStop()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Either$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
